// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using fam_comfort.Persistence;

#nullable disable

namespace fam_comfort.Persistence.Migrations
{
    [DbContext(typeof(FamComfortDbContext))]
    [Migration("20250414120451_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ColorFacade", b =>
                {
                    b.Property<Guid>("ColorsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FacadesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ColorsId", "FacadesId");

                    b.HasIndex("FacadesId");

                    b.ToTable("ColorFacade");
                });

            modelBuilder.Entity("fam_comfort.Core.Models.Color", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HexColor")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Colors", (string)null);
                });

            modelBuilder.Entity("fam_comfort.Core.Models.Facade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(1024)");

                    b.Property<Guid>("FacadeCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<string>("Materials")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PathToImage")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(2048)")
                        .HasDefaultValue("images/template_image_facade.png");

                    b.Property<string>("PathToImageSchema")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(2048)")
                        .HasDefaultValue("images/template_image_facade.png");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("varchar(128)");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacadeCategoryId");

                    b.ToTable("Facades", (string)null);
                });

            modelBuilder.Entity("fam_comfort.Core.Models.FacadeCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PathToImage")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(2048)")
                        .HasDefaultValue("images/template_image_facade_category.png");

                    b.HasKey("Id");

                    b.ToTable("FacadeCategories", (string)null);
                });

            modelBuilder.Entity("ColorFacade", b =>
                {
                    b.HasOne("fam_comfort.Core.Models.Color", null)
                        .WithMany()
                        .HasForeignKey("ColorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("fam_comfort.Core.Models.Facade", null)
                        .WithMany()
                        .HasForeignKey("FacadesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("fam_comfort.Core.Models.Facade", b =>
                {
                    b.HasOne("fam_comfort.Core.Models.FacadeCategory", "FacadeCategory")
                        .WithMany("Facades")
                        .HasForeignKey("FacadeCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FacadeCategory");
                });

            modelBuilder.Entity("fam_comfort.Core.Models.FacadeCategory", b =>
                {
                    b.Navigation("Facades");
                });
#pragma warning restore 612, 618
        }
    }
}
